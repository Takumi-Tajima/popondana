.container.mt-4
  .row
    .col-md-8
      %h1.mb-4
        = @user.name
        %small.text-muted.ms-2 (所有本数: #{@ownerships.count}冊)
      
      - if @books_by_category.present?
        - @books_by_category.each do |category_name, ownerships|
          .mb-5
            %h3.mb-3
              %span.badge.bg-primary.me-2= category_name
              %small.text-muted #{ownerships.count}冊
            .row.g-3
              - ownerships.each do |ownership|
                .col-md-6.col-lg-4
                  .card.h-100
                    - if ownership.book.image_url.present?
                      = image_tag ownership.book.image_url, class: 'card-img-top', style: 'height: 200px; object-fit: contain;'
                    .card-body
                      %h6.card-title= ownership.book.title
                      %p.card-text
                        %small.text-muted
                          = ownership.book.author
                          %br
                          所有日: #{ownership.owned_at.strftime('%Y年%m月%d日')}
                    - if current_user == @user
                      .card-footer
                        .d-flex.justify-content-between
                          %button.btn.btn-sm.btn-outline-primary.edit-categories-btn{data: {ownership: {id: ownership.id}}}
                            カテゴリ編集
                          = link_to '削除', ownership_path(ownership), method: :delete, 
                            confirm: '本当に削除しますか？', 
                            class: 'btn btn-sm btn-outline-danger'
      - else
        .alert.alert-info まだ書籍を登録していません。
    
    .col-md-4
      .card
        .card-header
          %h5 月別登録数グラフ
        .card-body
          %canvas#booksChart{width: "400", height: "200"}
          - if params[:category_filter].present? || params[:start_date_filter].present? || params[:end_date_filter].present?
            %p.text-muted.mt-2 *絞り込み条件でのグラフ表示
      
      .card.mt-3
        .card-header
          %h5 カテゴリ別統計
        .card-body
          - category_stats = @books_by_category.map { |name, books| [name, books.count] }.sort_by(&:last).reverse
          - if category_stats.present?
            - category_stats.each do |category_name, count|
              .d-flex.justify-content-between.mb-2
                %span= category_name
                %span.badge.bg-primary= count
          - else
            %p.text-muted カテゴリなし

:javascript
  document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('booksChart').getContext('2d');
    const chartData = #{@chart_data.to_json.html_safe};
    
    new Chart(ctx, {
      type: 'line',
      data: {
        labels: chartData.labels,
        datasets: [{
          label: '登録本数',
          data: chartData.data,
          borderColor: 'rgb(75, 192, 192)',
          backgroundColor: 'rgba(75, 192, 192, 0.2)',
          tension: 0.1
        }]
      },
      options: {
        responsive: true,
        plugins: {
          legend: {
            display: false
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            ticks: {
              stepSize: 1
            }
          }
        }
      }
    });
  });
